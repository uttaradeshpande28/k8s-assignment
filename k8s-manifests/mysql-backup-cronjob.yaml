# MySQL Automated Backup CronJob
# Automated disaster recovery implementation
# Usage: kubectl apply -f k8s-manifests/mysql-backup-cronjob.yaml

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-backup-pvc
  namespace: k8s-assignment
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mysql-backup-cronjob
  namespace: k8s-assignment
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: mysql-backup
            image: mysql:8.0
            command:
            - /bin/bash
            - -c
            - |
              echo "Starting automated MySQL backup..."
              BACKUP_NAME="backup-$(date +%Y%m%d-%H%M%S)"
              BACKUP_DIR="/backup"
              
              # Create backup
              mysqldump -h mysql-service -u root -p$MYSQL_ROOT_PASSWORD testdb > $BACKUP_DIR/$BACKUP_NAME.sql
              
              # Compress backup to save space
              gzip $BACKUP_DIR/$BACKUP_NAME.sql
              
              # Keep only last 7 days of backups (retention policy)
              find $BACKUP_DIR -name "backup-*.sql.gz" -mtime +7 -delete
              
              echo "Backup completed: $BACKUP_NAME.sql.gz"
              echo "Available backups:"
              ls -la $BACKUP_DIR/
            env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
            volumeMounts:
            - name: backup-storage
              mountPath: /backup
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: mysql-backup-pvc
          restartPolicy: OnFailure
