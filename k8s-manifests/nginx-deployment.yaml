apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: k8s-assignment
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        log_format main ' -  [] "" '
                        '  "" '
                        '"" ""';
        
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        
        server {
            listen 80;
            server_name localhost;
            
            location / {
                root /usr/share/nginx/html;
                index index.html;
            }
            
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Kubernetes Assignment - Web Server</title>
        <style>
            body { font-family: Arial, sans-serif; margin: 40px; background-color: #f5f5f5; }
            .container { background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
            .header { color: #2c3e50; border-bottom: 2px solid #3498db; padding-bottom: 10px; }
            .info { margin: 20px 0; padding: 15px; background-color: #ecf0f1; border-radius: 5px; }
            .pod-info { color: #27ae60; font-weight: bold; }
            .serving-host { color: #e74c3c; font-weight: bold; }
            .timestamp { color: #7f8c8d; font-size: 0.9em; }
        </style>
    </head>
    <body>
        <div class="container">
            <h1 class="header">Kubernetes Assignment - Web Server</h1>
            
            <div class="info">
                <h3>Pod Information:</h3>
                <p><span class="pod-info">Pod IP:</span> <span id="pod-ip">Loading...</span></p>
                <p><span class="serving-host">Serving Host:</span> <span id="serving-host">Loading...</span></p>
                <p><span class="timestamp">Last Updated:</span> <span id="timestamp">Loading...</span></p>
            </div>
            
            <div class="info">
                <h3>System Information:</h3>
                <p><strong>Namespace:</strong> k8s-assignment</p>
                <p><strong>Service:</strong> nginx-service</p>
                <p><strong>Replicas:</strong> 3</p>
            </div>
            
            <div class="info">
                <h3>Database Connection:</h3>
                <p><strong>MySQL Host:</strong> mysql.k8s-assignment.svc.cluster.local</p>
                <p><strong>Port:</strong> 3306</p>
                <p><strong>Status:</strong> <span id="db-status">Checking...</span></p>
            </div>
        </div>
        
        <script>
            // Get Pod IP from environment variable
            document.getElementById('pod-ip').textContent = '' || 'Not available';
            
            // Get Serving Host from environment variable
            document.getElementById('serving-host').textContent = '' || 'Not available';
            
            // Update timestamp
            document.getElementById('timestamp').textContent = new Date().toLocaleString();
            
            // Check database connection
            fetch('/health')
                .then(response => response.text())
                .then(data => {
                    document.getElementById('db-status').textContent = 'Connected';
                    document.getElementById('db-status').style.color = '#27ae60';
                })
                .catch(error => {
                    document.getElementById('db-status').textContent = 'Disconnected';
                    document.getElementById('db-status').style.color = '#e74c3c';
                });
        </script>
    </body>
    </html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: k8s-assignment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      initContainers:
      - name: init-serving-host
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          POD_NAME=BLR-AA604309
          SERVING_HOST="Host-"
          echo "SERVING_HOST=" > /shared/serving-host.env
          echo "POD_IP=" >> /shared/serving-host.env
          echo "Init container completed. Serving host: "
        volumeMounts:
        - name: shared-data
          mountPath: /shared
      containers:
      - name: nginx
        image: nginx:1.25
        ports:
        - containerPort: 80
        env:
        - name: SERVING_HOST
          valueFrom:
            configMapKeyRef:
              name: nginx-config
              key: serving-host
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: nginx-html
          mountPath: /usr/share/nginx/html
        - name: shared-data
          mountPath: /shared
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: nginx-html
        configMap:
          name: nginx-config
          items:
          - key: index.html
            path: index.html
      - name: shared-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: k8s-assignment
spec:
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080
  type: NodePort
